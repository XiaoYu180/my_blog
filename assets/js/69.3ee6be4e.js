(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{638:function(s,t,a){"use strict";a.r(t);var n=a(29),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"环境前提"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境前提"}},[s._v("#")]),s._v(" 环境前提")]),s._v(" "),a("p",[s._v("以下先决条件才能使用pytest-rerunfailures")]),s._v(" "),a("ul",[a("li",[s._v("Python 3.5, 最高 3.8, or PyPy3")]),s._v(" "),a("li",[s._v("pytest 5.0或更高版本")])]),s._v(" "),a("h2",{attrs:{id:"安装插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装插件"}},[s._v("#")]),s._v(" 安装插件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("pip3 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pytest-rerunfailures -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"提前了解重点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提前了解重点"}},[s._v("#")]),s._v(" 提前了解重点")]),s._v(" "),a("p",[a("strong",[s._v("命令行参数：")]),s._v("--reruns n（重新运行次数），--reruns-delay m（等待运行秒数）")]),s._v(" "),a("p",[s._v("**装饰器参数：**reruns=n（重新运行次数），reruns_delay=m（等待运行秒数）")]),s._v(" "),a("h2",{attrs:{id:"重新运行所有失败的用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重新运行所有失败的用例"}},[s._v("#")]),s._v(" 重新运行所有失败的用例")]),s._v(" "),a("p",[s._v("要重新运行所有测试失败的用例，使用 --reruns 命令行选项，并指定要运行测试的最大次数：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("pytest --reruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" -s \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[s._v("#")]),s._v(" 知识点")]),s._v(" "),a("p",[s._v("运行失败的 fixture 或 setup_class 也将重新执行")]),s._v(" "),a("h3",{attrs:{id:"添加重新运行的延时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加重新运行的延时"}},[s._v("#")]),s._v(" 添加重新运行的延时")]),s._v(" "),a("p",[s._v("要在两次重试之间增加延迟时间，使用 --reruns-delay 命令行选项，指定下次测试重新开始之前等待的秒数")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("pytest --reruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" --reruns-delay "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" -s\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"重新运行指定的测试用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重新运行指定的测试用例"}},[s._v("#")]),s._v(" 重新运行指定的测试用例")]),s._v(" "),a("p",[s._v("要将单个测试用例添加flaky装饰器 @pytest.mark.flaky(reruns=5) ，并在测试失败时自动重新运行，需要指定最大重新运行的次数")]),s._v(" "),a("h3",{attrs:{id:"小栗子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小栗子"}},[s._v("#")]),s._v(" 小栗子")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" pytest\n\n\n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@pytest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flaky")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reruns"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_example")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("assert")]),s._v(" random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("choice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"执行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行结果"}},[s._v("#")]),s._v(" 执行结果")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("collecting ... collected 1 item\n\n11_reruns.py::test_example RERUN                                         [100%]\n11_reruns.py::test_example PASSED                                        [100%]\n\n========================= 1 passed, 1 rerun in 0.05s ==========================\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"同样的-这个也可以指定重新运行的等待时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同样的-这个也可以指定重新运行的等待时间"}},[s._v("#")]),s._v(" 同样的，这个也可以指定重新运行的等待时间")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@pytest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mark"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flaky")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reruns"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reruns_delay"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_example")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("assert")]),s._v(" random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("choice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),a("p",[s._v("如果指定了用例的重新运行次数，则在命令行添加 --reruns 对这些用例是不会生效的")]),s._v(" "),a("h2",{attrs:{id:"兼容性问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兼容性问题"}},[s._v("#")]),s._v(" 兼容性问题")]),s._v(" "),a("ul",[a("li",[s._v("不可以和fixture装饰器一起使用： @pytest.fixture()")]),s._v(" "),a("li",[s._v("该插件与pytest-xdist的 --looponfail 标志不兼容")]),s._v(" "),a("li",[s._v("该插件与核心--pdb标志不兼容")])]),s._v(" "),a("p",[s._v("本文转自 "),a("a",{attrs:{href:"https://www.cnblogs.com/poloyy/p/12687308.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/poloyy/p/12687308.html"),a("OutboundLink")],1),s._v("，如有侵权，请联系删除。")])])}),[],!1,null,null,null);t.default=e.exports}}]);