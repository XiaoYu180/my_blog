(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{553:function(t,e,s){t.exports=s.p+"assets/img/image-20220531171538414.44a86c8b.png"},626:function(t,e,s){"use strict";s.r(e);var p=s(29),a=Object(p.a)({},(function(){var t=this,e=t.$createElement,p=t._self._c||e;return p("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[p("h1",{attrs:{id:"python-excel实现管理接口用例框架"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#python-excel实现管理接口用例框架"}},[t._v("#")]),t._v(" python+Excel实现管理接口用例框架")]),t._v(" "),p("p",[t._v("之前在公司，接口自动化测试都是配置在yaml文件里面统一管理。")]),t._v(" "),p("p",[t._v("最近复习知识途中，发现还有一种上手简单的管理接口方式：Excel")]),t._v(" "),p("p",[t._v("就我认为，这种方式，对于刚入手接口自动化测试的人来说，是福音。只需要在excel表格中配置接口的信息，然后run程序，就可以生成接口测试报告了。")]),t._v(" "),p("p",[t._v("无需任何的编程基础。略懂接口就ok。")]),t._v(" "),p("p",[p("img",{attrs:{src:s(553),alt:"image-20220531171538414"}})]),t._v(" "),p("p",[t._v("我也综合所学，封装了一套可以对excel接口用例管理的框架。")]),t._v(" "),p("p",[t._v("https://github.com/xiaorui16888/ExcelInterfaceCases")]),t._v(" "),p("h2",{attrs:{id:"项目结构"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#项目结构"}},[t._v("#")]),t._v(" 项目结构")]),t._v(" "),p("p",[t._v("api：接口请求方法的封装，如get、post、put、delete")]),t._v(" "),p("p",[t._v("data：数据存储文件，如excel用例，以及由excel用例生成的json格式的接口用例。")]),t._v(" "),p("p",[t._v("log：日志，这里记录错误日志，方便测试完成后分析结果。")]),t._v(" "),p("p",[t._v("reports：测试报告，allure")]),t._v(" "),p("p",[t._v("scripts：测试脚本，指定读取xxx.xlsx用例")]),t._v(" "),p("p",[t._v("tools：工具类，对excel、json操作，以及断言的封装")]),t._v(" "),p("p",[t._v("config.py：用例配置参数文件，如host，项目基础路径，excel数据对应列")]),t._v(" "),p("p",[t._v("pytest.ini：pytest框架配置文件")]),t._v(" "),p("p",[t._v("temps：allure临时文件")])])}),[],!1,null,null,null);e.default=a.exports}}]);